"use client"

import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Button } from "@/components/ui/button"
import { useVulnerabilityAnalysis } from "@/lib/hooks"
import { VulnerabilityAnalysisSkeleton } from "@/components/loading-skeletons"
import { VulnerabilityAnalysisHelp, InfoTooltip } from "@/components/educational-tooltips"
import { AlertCircle, RefreshCw, ExternalLink } from "lucide-react"

export function VulnerabilityAnalysis() {
  const { data, loading, error, refresh } = useVulnerabilityAnalysis()

  const getSeverityColor = (severity: string) => {
    switch (severity) {
      case "critical": return "bg-red-700"
      case "high": return "bg-red-600"
      case "medium": return "bg-yellow-600"
      case "low": return "bg-green-600"
      default: return "bg-gray-600"
    }
  }

  const getStatusColor = (status: string) => {
    switch (status) {
      case "patched": return "bg-green-600"
      case "patch-available": return "bg-blue-600"
      case "investigating": return "bg-yellow-600"
      case "no-fix": return "bg-red-600"
      default: return "bg-gray-600"
    }
  }

  if (loading) {
    return <VulnerabilityAnalysisSkeleton />
  }

  return (
    <Card className="border-orange-800/30 bg-black/40">
      <CardHeader>
        <CardTitle className="flex items-center gap-2 text-orange-300">
          <span className="text-2xl">üõ°Ô∏è</span>
          <InfoTooltip 
            title="Vulnerability Analysis" 
            description="Latest CVE vulnerabilities from the National Vulnerability Database (NVD) with CVSS scoring and risk assessment"
          >
            Vulnerability Analysis
          </InfoTooltip>
          <div className="ml-auto flex items-center gap-2">
            <VulnerabilityAnalysisHelp />
            <Button 
              variant="ghost" 
              size="sm" 
              onClick={refresh}
              className="text-orange-300 hover:text-orange-200"
            >
              <RefreshCw className="h-4 w-4" />
            </Button>
          </div>
        </CardTitle>
        <CardDescription className="text-orange-200/70">
          {error ? (
            <span className="flex items-center gap-1 text-yellow-400">
              <AlertCircle className="h-3 w-3" />
              Using demo data (API unavailable)
            </span>
          ) : (
            "Latest security vulnerabilities and threat assessments"
          )}
        </CardDescription>
      </CardHeader>
      <CardContent>
        <div className="space-y-4">
          {/* Stats Grid */}
          <div className="grid grid-cols-4 gap-4 mb-6">
            <div className="text-center p-3 bg-red-950/30 rounded-lg border border-red-800/20">
              <div className="text-2xl font-bold text-red-400">
                {data?.stats.critical || 0}
              </div>
              <div className="text-xs text-red-300">Critical</div>
            </div>
            <div className="text-center p-3 bg-orange-950/30 rounded-lg border border-orange-800/20">
              <div className="text-2xl font-bold text-orange-400">
                {data?.stats.high || 0}
              </div>
              <div className="text-xs text-orange-300">High</div>
            </div>
            <div className="text-center p-3 bg-yellow-950/30 rounded-lg border border-yellow-800/20">
              <div className="text-2xl font-bold text-yellow-400">
                {data?.stats.medium || 0}
              </div>
              <div className="text-xs text-yellow-300">Medium</div>
            </div>
            <div className="text-center p-3 bg-green-950/30 rounded-lg border border-green-800/20">
              <div className="text-2xl font-bold text-green-400">
                {data?.stats.low || 0}
              </div>
              <div className="text-xs text-green-300">Low</div>
            </div>
          </div>

          {/* Vulnerabilities List */}
          <div className="space-y-3">
            <h4 className="font-medium text-orange-300">Latest Critical Vulnerabilities</h4>
            {data?.vulnerabilities && data.vulnerabilities.length > 0 ? (
              data.vulnerabilities.slice(0, 4).map((vuln, index) => (
                <div key={index} className="p-4 bg-orange-950/30 rounded-lg border border-orange-800/20">
                  <div className="flex items-start justify-between mb-3">
                    <div className="flex items-center gap-2">
                      <span className="text-lg">{vuln.emoji}</span>
                      <div>
                        <h5 className="text-sm font-medium text-orange-300">{vuln.title}</h5>
                        <div className="flex items-center gap-2">
                          <p className="text-xs text-orange-200/60">{vuln.id} ‚Ä¢ CVSS {vuln.cvss}</p>
                          <Button
                            variant="ghost"
                            size="sm"
                            className="h-auto p-0 text-xs text-orange-400 hover:text-orange-300"
                            onClick={() => window.open(`https://nvd.nist.gov/vuln/detail/${vuln.id}`, '_blank')}
                          >
                            <ExternalLink className="h-3 w-3 ml-1" />
                          </Button>
                        </div>
                      </div>
                    </div>
                    <div className="flex gap-2">
                      <Badge className={getSeverityColor(vuln.severity)}>
                        {vuln.severity.toUpperCase()}
                      </Badge>
                      <Badge className={getStatusColor(vuln.status)}>
                        {vuln.status.replace("-", " ").toUpperCase()}
                      </Badge>
                    </div>
                  </div>
                  <p className="text-sm text-orange-100/70 mb-2">{vuln.description}</p>
                  <div className="flex items-center justify-between">
                    <p className="text-xs text-orange-200/60">Affected: {vuln.affected}</p>
                    <p className="text-xs text-orange-200/60">Published: {vuln.published}</p>
                  </div>
                </div>
              ))
            ) : (
              <div className="text-center py-8 text-orange-300/60">
                <span className="text-4xl block mb-2">üõ°Ô∏è</span>
                <p>No recent vulnerabilities found!</p>
                <p className="text-xs text-orange-200/50 mt-1">Your digital realm appears secure...</p>
              </div>
            )}
          </div>

          <div className="flex gap-2 pt-4">
            <Button className="bg-orange-600 hover:bg-orange-700" onClick={refresh}>
              Refresh Analysis
            </Button>
            <Button variant="outline" className="border-orange-600 text-orange-300">
              Generate Full Report
            </Button>
            <Button variant="outline" className="border-orange-600 text-orange-300">
              Export CVE List
            </Button>
          </div>

          {error && (
            <div className="mt-4 p-3 bg-yellow-950/30 rounded-lg border border-yellow-800/30">
              <div className="flex items-start gap-2">
                <AlertCircle className="h-4 w-4 text-yellow-400 mt-0.5 flex-shrink-0" />
                <div className="text-sm">
                  <p className="text-yellow-300 font-medium">NVD API Connection Issue</p>
                  <p className="text-yellow-200/80">
                    Unable to fetch live vulnerability data from the National Vulnerability Database.
                    Showing demo data for educational purposes.
                  </p>
                </div>
              </div>
            </div>
          )}
        </div>
      </CardContent>
    </Card>
  )
}