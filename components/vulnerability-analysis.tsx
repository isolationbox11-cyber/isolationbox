import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Button } from "@/components/ui/button"

export function VulnerabilityAnalysis() {
  const vulnerabilities = [
    {
      id: "CVE-2023-44487",
      title: "HTTP/2 Rapid Reset Attack",
      severity: "critical",
      cvss: 9.8,
      description: "DDoS vulnerability affecting HTTP/2 implementations",
      affected: "Web servers, Load balancers",
      status: "patch-available",
      emoji: "üö®"
    },
    {
      id: "CVE-2023-42793", 
      title: "JetBrains TeamCity Authentication Bypass",
      severity: "high",
      cvss: 8.1,
      description: "Authentication bypass in TeamCity server",
      affected: "TeamCity instances",
      status: "patch-available",
      emoji: "üîê"
    },
    {
      id: "CVE-2023-41265",
      title: "Qlik Sense Path Traversal",
      severity: "high", 
      cvss: 7.5,
      description: "Path traversal vulnerability in Qlik Sense",
      affected: "Qlik Sense servers",
      status: "investigating",
      emoji: "üìÇ"
    },
    {
      id: "CVE-2023-38831",
      title: "WinRAR Code Execution Vulnerability",
      severity: "high",
      cvss: 7.8,
      description: "Remote code execution via crafted archives",
      affected: "WinRAR versions before 6.23",
      status: "patched",
      emoji: "üì¶"
    }
  ]

  const getSeverityColor = (severity: string) => {
    switch (severity) {
      case "critical": return "bg-red-700"
      case "high": return "bg-red-600"
      case "medium": return "bg-yellow-600"
      case "low": return "bg-green-600"
      default: return "bg-gray-600"
    }
  }

  const getStatusColor = (status: string) => {
    switch (status) {
      case "patched": return "bg-green-600"
      case "patch-available": return "bg-blue-600"
      case "investigating": return "bg-yellow-600"
      case "no-fix": return "bg-red-600"
      default: return "bg-gray-600"
    }
  }

  return (
    <Card className="border-blue-800/30 bg-slate-900/40">
      <CardHeader>
        <CardTitle className="flex items-center gap-2 text-blue-300">
          <span className="text-2xl">üõ°Ô∏è</span>
          Vulnerability Analysis
        </CardTitle>
        <CardDescription className="text-blue-200/70">
          Latest security vulnerabilities and threat assessments
        </CardDescription>
      </CardHeader>
      <CardContent>
        <div className="space-y-4">
          <div className="grid grid-cols-4 gap-4 mb-6">
            <div className="text-center p-3 bg-red-950/30 rounded-lg border border-red-800/20">
              <div className="text-2xl font-bold text-red-400">1</div>
              <div className="text-xs text-red-300">Critical</div>
            </div>
            <div className="text-center p-3 bg-blue-950/30 rounded-lg border border-blue-800/20">
              <div className="text-2xl font-bold text-blue-400">3</div>
              <div className="text-xs text-blue-300">High</div>
            </div>
            <div className="text-center p-3 bg-yellow-950/30 rounded-lg border border-yellow-800/20">
              <div className="text-2xl font-bold text-yellow-400">7</div>
              <div className="text-xs text-yellow-300">Medium</div>
            </div>
            <div className="text-center p-3 bg-green-950/30 rounded-lg border border-green-800/20">
              <div className="text-2xl font-bold text-green-400">12</div>
              <div className="text-xs text-green-300">Low</div>
            </div>
          </div>

          <div className="space-y-3">
            <h4 className="font-medium text-orange-300">Latest Critical Vulnerabilities</h4>
            {vulnerabilities.map((vuln, index) => (
              <div key={index} className="p-4 bg-orange-950/30 rounded-lg border border-orange-800/20">
                <div className="flex items-start justify-between mb-3">
                  <div className="flex items-center gap-2">
                    <span className="text-lg">{vuln.emoji}</span>
                    <div>
                      <h5 className="text-sm font-medium text-orange-300">{vuln.title}</h5>
                      <p className="text-xs text-orange-200/60">{vuln.id} ‚Ä¢ CVSS {vuln.cvss}</p>
                    </div>
                  </div>
                  <div className="flex gap-2">
                    <Badge className={getSeverityColor(vuln.severity)}>
                      {vuln.severity.toUpperCase()}
                    </Badge>
                    <Badge className={getStatusColor(vuln.status)}>
                      {vuln.status.replace("-", " ").toUpperCase()}
                    </Badge>
                  </div>
                </div>
                <p className="text-sm text-orange-100/70 mb-2">{vuln.description}</p>
                <p className="text-xs text-orange-200/60">Affected: {vuln.affected}</p>
              </div>
            ))}
          </div>

          <div className="flex gap-2 pt-4">
            <Button className="bg-orange-600 hover:bg-orange-700">
              Generate Full Report
            </Button>
            <Button variant="outline" className="border-orange-600 text-orange-300">
              Export CVE List
            </Button>
          </div>
        </div>
      </CardContent>
    </Card>
  )
}